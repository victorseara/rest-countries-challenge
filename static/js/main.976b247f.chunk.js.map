{"version":3,"sources":["components/Header/Header.tsx","api/countries/countriesApi.ts","pages/CountryDetails/CountryDetails.tsx","components/Dropdown/Dropdown.tsx","components/SearchBox/SearchBox.tsx","components/Card/Card.tsx","components/GridList/GridList.tsx","pages/Home/Home.tsx","routes/Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","title","toggleTheme","id","className","type","onClick","fill","COUNTRIES_API_URL","client","axios","create","baseURL","getAllCountries","a","params","fields","get","then","response","data","catch","Error","findCountryByName","countryCode","error","isAxiosError","status","InformationItem","label","children","CountryDetails","history","location","useState","country","setCountry","useEffect","fetch","countryName","pathname","replace","flag","name","nativeName","population","region","subregion","capital","topLevelDomain","currencies","map","item","languages","goBack","src","alt","toString","Dropdown","placeholder","onChange","options","value","htmlFor","disabled","hidden","SearchBox","localValue","setLocalValue","debounce","setTimeout","clearTimeout","aria-label","e","target","Card","useHistory","role","push","alpha3Code","toLocaleString","EmptyState","GridList","countries","length","style","overflowX","regionOptions","Home","state","setState","query","setQuery","filterByRegion","setFilterByRegion","countriesToShow","filter","toLowerCase","includes","displayCountries","updateQuery","useCallback","err","prevstate","message","minWidth","Routes","userTheme","setUserTheme","theme","localStorage","getItem","setItem","document","querySelector","classList","add","basename","remove","path","exact","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.976b247f.chunk.js","sourcesContent":["import { Moon } from 'react-feather';\n\ninterface HeaderProps {\n  title: string;\n  toggleTheme: () => void;\n}\n\nconst Header = ({ title, toggleTheme }: HeaderProps) => {\n  return (\n    <div\n      id=\"main-header\"\n      className=\"w-full fixed z-50 bg-white dark:bg-common-blue h-20 shadow-md flex justify-center  text-dark-blue dark:text-white\"\n    >\n      <div className=\"w-10/12 max-w-screen-2xl flex justify-between items-center\">\n        <h1 className=\"font-bold text-xl sm:text-3xl\">{title}</h1>\n        <button\n          type=\"button\"\n          className=\"flex cursor-pointer hover:opacity-80\"\n          onClick={toggleTheme}\n        >\n          <Moon fill=\"#fff\" />\n          <span className=\"ml-2 font-semibold hidden sm:inline\">Dark mode</span>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import axios from 'axios';\nimport { Country } from './types/Country';\n\nexport const COUNTRIES_API_URL = 'https://restcountries.eu/rest/v2';\n\nconst client = axios.create({ baseURL: COUNTRIES_API_URL });\n\nexport const getAllCountries = async () => {\n  const params = { fields: 'flag;name;population;region;capital;alpha3Code' };\n  return client\n    .get<Country[]>(`${COUNTRIES_API_URL}/all`, {\n      params,\n    })\n    .then(response => response.data)\n    .catch(() => {\n      throw new Error(\n        `Sorry, we cannot fetch countries at this moment. Please try again later.`\n      );\n    });\n};\n\nexport const findCountryByName = async (countryCode: string) => {\n  return client\n    .get<Country>(`${COUNTRIES_API_URL}/alpha/${countryCode}`)\n    .then(response => response.data)\n    .catch(error => {\n      if (error.isAxiosError && error.status === 404) {\n        throw new Error(`Sorry, there is no country with name: ${countryCode}`);\n      }\n\n      throw new Error(\n        'Sorry, we failed to respond to your request. Please try again later'\n      );\n    });\n};\n","import { findCountryByName } from 'api/countries/countriesApi';\nimport { Country } from 'api/countries/types/Country';\nimport { useEffect, useState } from 'react';\nimport { ChevronLeft, Loader } from 'react-feather';\nimport { StaticContext } from 'react-router';\nimport { RouteComponentProps } from 'react-router-dom';\n\ninterface InformationItemProps {\n  label: string;\n  children: React.ReactNode;\n}\nconst InformationItem = ({ label, children }: InformationItemProps) => (\n  <li className=\"py-1\">\n    <span className=\"font-semibold\">{label}: </span>\n    {children}\n  </li>\n);\n\ninterface Params {\n  name: string;\n}\n\nconst CountryDetails = ({\n  history,\n  location,\n}: RouteComponentProps<Params, StaticContext, Country>) => {\n  const [country, setCountry] = useState<Country>();\n\n  useEffect(() => {\n    const fetch = async (countryName: string) =>\n      findCountryByName(countryName).then(data => setCountry(data));\n    if (location.pathname) {\n      fetch(location.pathname.replace('/', ''));\n    }\n  }, [location.pathname]);\n\n  if (!country) {\n    return (\n      <div className=\"flex py-12 my-4\">\n        <Loader className=\"animate-spin mr-2\" />{' '}\n        <span className=\"animate-pulse font-semibold\">Loading...</span>\n      </div>\n    );\n  }\n\n  const {\n    flag,\n    name,\n    nativeName,\n    population,\n    region,\n    subregion,\n    capital,\n    topLevelDomain,\n  } = country;\n\n  const currencies = country.currencies.map(item => item.name);\n  const languages = country.languages.map(item => item.name);\n\n  return (\n    <div className=\"h-full w-full flex flex-col\">\n      <div className=\"py-12 my-4\">\n        <button\n          className=\"bg-light-gray dark:bg-common-blue px-8 py-4 flex text-lg items-center font-semibold shadow-md rounded-md hover:border hover:border-dark-hover dark:hover:shadow-xl hover:scale-50 transition-all ease-in\"\n          type=\"button\"\n          onClick={() => history.goBack()}\n        >\n          <ChevronLeft />\n          Countries\n        </button>\n      </div>\n      <div className=\"flex flex-col xl:flex-row\">\n        <img\n          src={flag}\n          alt={`Flag of ${name}`}\n          className=\"h-72 sm:h-80 md:h-96 w-full object-cover sm:max-w-xl md:w-8/12 shadow-xl rounded-md\"\n        />\n        <section className=\"flex flex-col flex-1 xl:ml-24 py-12\">\n          <h2 className=\"text-3xl font-bold\">{name}</h2>\n          <div className=\"flex text-lg flex-col lg:flex-row xl:flex-row\">\n            <ul className=\"flex-1 py-4 mr-8\">\n              <InformationItem label=\"Native name\">\n                {nativeName}\n              </InformationItem>\n              <InformationItem label=\"Population\">{population}</InformationItem>\n              <InformationItem label=\"Region\">{region}</InformationItem>\n              <InformationItem label=\"Sub Region\">{subregion}</InformationItem>\n              <InformationItem label=\"Capital\">{capital}</InformationItem>\n            </ul>\n            <ul className=\"flex-1 py-8\">\n              <InformationItem label=\"Top Level Domain\">\n                {topLevelDomain.toString()}\n              </InformationItem>\n              <InformationItem label=\"Currencies\">\n                {currencies.toString()}\n              </InformationItem>\n              <InformationItem label=\"Languages\">\n                {languages.toString()}\n              </InformationItem>\n            </ul>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default CountryDetails;\n","import { ChevronDown } from 'react-feather';\n\ntype Options = string[];\n\ninterface DropdownProps {\n  name?: string;\n  placeholder?: string;\n  value?: string;\n  onChange?: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n  options: Options;\n}\n\nconst Dropdown = ({\n  name,\n  placeholder,\n  onChange,\n  options,\n  value,\n}: DropdownProps) => {\n  return (\n    <label\n      htmlFor=\"Filter by Region\"\n      className=\"relative flex items-center text-gray-500 dark:text-gray-200 rounded-md shadow-md h-14\"\n    >\n      <ChevronDown className=\"absolute my-auto right-0 mx-4\" />\n      <select\n        onChange={onChange}\n        name={name}\n        value={value}\n        className=\"w-full h-full dark:bg-common-blue px-8 bg-white rounded-md font-semibold focus:outline-none focus:ring-inset focus:ring-dark-hover focus:ring-1\"\n      >\n        <option disabled hidden className=\"font-semibold\" value=\"\">\n          {placeholder || 'Select an option'}\n        </option>\n        {options.map(item => (\n          <option key={item} className=\"font-semibold\">\n            {item}\n          </option>\n        ))}\n      </select>\n    </label>\n  );\n};\n\nexport default Dropdown;\n","import { useEffect, useState } from 'react';\nimport { Search } from 'react-feather';\n\ntype SearchBoxProps = {\n  placeholder?: string;\n  value?: string;\n  onChange: (value: string) => void;\n};\n\nconst SearchBox = ({ placeholder, value, onChange }: SearchBoxProps) => {\n  const [localValue, setLocalValue] = useState(value || '');\n\n  useEffect(() => {\n    const debounce = setTimeout(() => {\n      onChange(localValue);\n    }, 300);\n\n    return () => {\n      clearTimeout(debounce);\n    };\n  }, [localValue, onChange]);\n\n  return (\n    <div className=\"relative flex items-center text-gray-500 dark:text-gray-200 h-14\">\n      <Search className=\"absolute my-auto mx-4\" />\n      <input\n        className=\"text-base rounded-md shadow-md w-full h-full font-semibold input-light input-dark pl-16 focus:outline-none focus:ring-inset focus:ring-dark-hover focus:ring-1\"\n        type=\"text\"\n        aria-label=\"Search\"\n        onChange={e => setLocalValue(e.target.value)}\n        value={localValue}\n        placeholder={placeholder || 'Search ...'}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import { Country } from 'api/countries/types/Country';\nimport { useHistory } from 'react-router-dom';\n\ninterface CardProps {\n  country: Country;\n}\n\nconst Card = ({ country }: CardProps) => {\n  const history = useHistory();\n\n  return (\n    <div\n      className=\"flex flex-col dark:bg-common-blue rounded-md shadow-lg dark:text-white text-very-dark-blue cursor-pointer\"\n      role=\"presentation\"\n      onClick={() => history.push(`/${country.alpha3Code}`)}\n    >\n      <img\n        src={country.flag}\n        alt={`Flag of ${country.name}`}\n        className=\"object-cover w-full h-52 rounded-t-md\"\n      />\n      <div className=\"py-8 px-6\">\n        <h3 className=\"font-bold text-lg mb-4\">{country.name}</h3>\n        <ul>\n          <li className=\"mb-2\">\n            <span className=\"font-semibold\">Population: </span>{' '}\n            {country.population.toLocaleString()}\n          </li>\n          <li className=\"mb-2\">\n            <span className=\"font-semibold\">Region: </span> {country.region}\n          </li>\n          <li className=\"mb-2\">\n            <span className=\"font-semibold\">Capital: </span> {country.capital}\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import { Country } from 'api/countries/types/Country';\nimport Card from '../Card/Card';\n\ninterface GridListProps {\n  countries: Country[];\n}\n\nconst EmptyState = () => (\n  <div className=\"flex text-very-dark-blue dark:text-white\">\n    <span className=\"font-semibold\">No country match your query.</span>\n  </div>\n);\n\nexport const GridList = ({ countries }: GridListProps) => {\n  if (countries.length === 0) {\n    return <EmptyState />;\n  }\n  return (\n    <div\n      className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-16\"\n      style={{ overflowX: 'clip' }}\n    >\n      {countries.map(country => (\n        <Card country={country} key={country.name} />\n      ))}\n    </div>\n  );\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { Country } from 'api/countries/types/Country';\nimport { getAllCountries } from 'api/countries/countriesApi';\nimport { Loader } from 'react-feather';\nimport Dropdown from '../../components/Dropdown/Dropdown';\nimport SearchBox from '../../components/SearchBox/SearchBox';\nimport { GridList } from '../../components/GridList/GridList';\n\nconst regionOptions = ['Africa', 'Americas', 'Asia', 'Europe', 'Oceania'];\n\nconst displayCountries = (\n  countries: Country[],\n  filterByRegion?: string,\n  query?: string\n) => {\n  if (!filterByRegion && !query) {\n    return countries;\n  }\n\n  const result = countries.filter(item => {\n    if (filterByRegion && item.region === filterByRegion) {\n      if (!query) {\n        return true;\n      }\n      return item.name.toLowerCase().includes(query.toLowerCase());\n    }\n\n    if (query && !filterByRegion) {\n      return item.name.toLowerCase().includes(query.toLowerCase());\n    }\n\n    return false;\n  });\n\n  return result;\n};\n\ntype State = {\n  countries: Country[];\n  status: 'pending' | 'resolved' | 'error';\n  error: string;\n};\n\nfunction Home() {\n  const [state, setState] = useState<State>({\n    countries: [],\n    status: 'pending',\n    error: '',\n  });\n  const [query, setQuery] = useState('');\n  const [filterByRegion, setFilterByRegion] = useState('');\n\n  const { countries, status, error } = state;\n\n  const countriesToShow =\n    filterByRegion || query\n      ? displayCountries(countries, filterByRegion, query)\n      : countries;\n\n  const updateQuery = useCallback((value: string) => setQuery(value), []);\n\n  useEffect(() => {\n    const fetch = async () => {\n      await getAllCountries()\n        .then(data =>\n          setState({ countries: data, status: 'resolved', error: '' })\n        )\n        .catch(err =>\n          setState(prevstate => ({\n            ...prevstate,\n            status: 'error',\n            error: err.message,\n          }))\n        );\n    };\n    fetch();\n  }, []);\n\n  return (\n    <div className=\"flex flex-col\">\n      <div\n        id=\"home-fixed-content\"\n        className=\"flex flex-col h-52 sm:h-36 justify-center  w-full fixed left-0 bg-light-gray dark:bg-dark-blue items-center\"\n      >\n        <div className=\"flex justify-between flex-wrap w-10/12 max-w-screen-2xl\">\n          <div className=\"w-full sm:w-1/3 \" style={{ minWidth: '320px' }}>\n            <SearchBox\n              placeholder=\"Search for a country...\"\n              value={query}\n              onChange={updateQuery}\n            />\n          </div>\n          <div\n            className=\"w-6/12 sm:w-2/12 mt-10 sm:mt-0\"\n            style={{ minWidth: '200px' }}\n          >\n            <Dropdown\n              options={regionOptions}\n              placeholder=\"Filter by Region\"\n              value={filterByRegion}\n              onChange={e => setFilterByRegion(e.target.value)}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-52 sm:mt-36\">\n        {status !== 'resolved' ? (\n          <div>\n            {error && <div>{error}</div>}\n            {status === 'pending' && (\n              <div className=\"flex\">\n                <Loader className=\"animate-spin mr-2\" />{' '}\n                <span className=\"animate-pulse font-semibold\">\n                  Finding countries...\n                </span>\n              </div>\n            )}\n          </div>\n        ) : (\n          <GridList countries={countriesToShow} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import { useEffect, useState } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Header from '../components/Header/Header';\nimport CountryDetails from '../pages/CountryDetails/CountryDetails';\nimport Home from '../pages/Home/Home';\n\ntype UserTheme = 'light' | 'dark';\n\nconst Routes = () => {\n  const [userTheme, setUserTheme] = useState<UserTheme>('light');\n\n  useEffect(() => {\n    const theme = localStorage.getItem('theme') as UserTheme;\n\n    if (!theme) {\n      localStorage.setItem('theme', 'light');\n    }\n\n    if (theme === 'dark') {\n      setUserTheme('dark');\n      document.querySelector('html')?.classList.add('dark');\n    }\n  }, []);\n\n  const toggleTheme = () => {\n    if (userTheme === 'dark') {\n      setUserTheme('light');\n      document.querySelector('html')?.classList.remove('dark');\n      localStorage.setItem('theme', 'light');\n    } else {\n      setUserTheme('dark');\n      document.querySelector('html')?.classList.add('dark');\n      localStorage.setItem('theme', 'dark');\n    }\n  };\n  return (\n    <BrowserRouter basename=\"/countries-rest-api-with-theme-switcher\">\n      <div className=\"flex flex-col w-full dark:bg-dark-blue bg-light-gray min-h-screen text-very-dark-blue dark:text-white\">\n        <Header title=\"Where in the world ?\" toggleTheme={toggleTheme} />\n        <div className=\"h-full w-10/12 max-w-screen-2xl flex flex-col self-center mt-20\">\n          <main className=\"h-full\">\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/:countryCode\" component={CountryDetails} />\n          </main>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;\n","import Routes from './routes/Routes';\n\nconst App = () => {\n  return <Routes />;\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable global-require */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nif (process.env.NODE_ENV === 'development') {\n  document.querySelector('body')?.classList.add('debug-screens');\n  const { worker } = require('./mocks/browser');\n  worker.start();\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}