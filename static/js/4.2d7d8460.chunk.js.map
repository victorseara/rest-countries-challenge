{"version":3,"sources":["api/countries/countriesApi.ts","../node_modules/react-feather/dist/icons/chevron-left.js","pages/CountryDetails/CountryDetails.tsx"],"names":["COUNTRIES_API_URL","client","axios","create","baseURL","getAllCountries","a","get","then","response","data","catch","Error","findCountryByCode","countryCode","params","error","isAxiosError","status","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ChevronLeft","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","propTypes","PropTypes","string","oneOfType","number","displayName","InformationItem","label","children","className","CountryDetails","history","location","useState","country","setCountry","useEffect","fetch","countryName","borders","promises","map","item","Promise","all","undefined","pathname","replace","Loader","message","flag","name","nativeName","population","region","subregion","capital","topLevelDomain","currencies","languages","type","onClick","goBack","src","alt","toString","title","alpha3Code","push"],"mappings":"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","file":"static/js/4.2d7d8460.chunk.js","sourcesContent":["import axios from 'axios';\nimport { Country } from './types/Country';\n\nexport const COUNTRIES_API_URL = 'https://restcountries.com/v2';\n\nconst client = axios.create({ baseURL: COUNTRIES_API_URL });\n\nexport const getAllCountries = async () => {\n  return client\n    .get<Country[]>(`${COUNTRIES_API_URL}/all`)\n    .then(response => response.data)\n    .catch(() => {\n      throw new Error(\n        `Sorry, we cannot fetch countries at this moment. Please try again later.`\n      );\n    });\n};\n\nexport const findCountryByCode = async (\n  countryCode: string,\n  params?: string\n) => {\n  return client\n    .get<Country>(`${COUNTRIES_API_URL}/alpha/${countryCode}`, { params })\n    .then(response => response.data)\n    .catch(error => {\n      if (error.isAxiosError && error.status === 404) {\n        throw new Error(`Sorry, there is no country with name: ${countryCode}`);\n      }\n\n      throw new Error(\n        'Sorry, we failed to respond to your request. Please try again later'\n      );\n    });\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ChevronLeft = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"15 18 9 12 15 6\"\n  }));\n});\nChevronLeft.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nChevronLeft.displayName = 'ChevronLeft';\nexport default ChevronLeft;","import { findCountryByCode } from 'api/countries/countriesApi';\nimport { Country, Border } from 'api/countries/types/Country';\nimport { useEffect, useState } from 'react';\nimport { ChevronLeft } from 'react-feather';\nimport { StaticContext } from 'react-router';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Img from 'react-cool-img';\nimport { Loader } from 'components/Loader/Loader';\n\ninterface InformationItemProps {\n  label: string;\n  children: React.ReactNode;\n}\nconst InformationItem = ({ label, children }: InformationItemProps) => (\n  <li className=\"py-1\">\n    <span className=\"font-semibold\">{label}: </span>\n    {children}\n  </li>\n);\n\ntype CountryDetailInfo = Omit<Country, 'borders'> & { borders?: Border[] };\n\ninterface Params {\n  name: string;\n}\n\nconst CountryDetails = ({\n  history,\n  location,\n}: RouteComponentProps<Params, StaticContext, Country>) => {\n  const [country, setCountry] = useState<CountryDetailInfo>();\n\n  useEffect(() => {\n    const fetch = async (countryName: string) =>\n      findCountryByCode(countryName).then(async data => {\n        if (data.borders.length > 0) {\n          const promises = data.borders.map(item =>\n            findCountryByCode(item, 'name;alpha3Code').then(\n              response => response as Border\n            )\n          );\n          const borders = await Promise.all(promises);\n\n          return setCountry({ ...data, borders });\n        }\n        return setCountry({ ...data, borders: undefined });\n      });\n\n    if (location.pathname) {\n      fetch(location.pathname.replace('/', ''));\n    }\n  }, [location.pathname]);\n\n  if (!country) {\n    return (\n      <div className=\"mt-8\">\n        <Loader message=\"Loading informations...\" />\n      </div>\n    );\n  }\n\n  const {\n    flag,\n    name,\n    nativeName,\n    population,\n    region,\n    subregion,\n    capital,\n    topLevelDomain,\n    borders,\n  } = country;\n\n  const currencies = country.currencies.map(item => item.name);\n  const languages = country.languages.map(item => item.name);\n\n  return (\n    <div className=\"h-full w-full flex flex-col transition-all duration-500 ease-linear\">\n      <div className=\"py-12 my-4\">\n        <button\n          className=\"bg-white dark:bg-common-blue px-8 py-4 flex text-lg items-center font-semibold shadow-md rounded-md hover:border hover:border-dark-hover dark:hover:shadow-xl\"\n          type=\"button\"\n          onClick={() => history.goBack()}\n        >\n          <ChevronLeft />\n          Go back\n        </button>\n      </div>\n      <div className=\"flex flex-col xl:flex-row\">\n        <div className=\"rounded-md max-w-2xl\">\n          <Img\n            src={flag}\n            alt={`Flag of ${name}`}\n            className=\"h-auto w-full shadow-xl rounded-md object-contain\"\n          />\n        </div>\n        <div>\n          <section className=\"flex flex-col xl:ml-24 py-12\">\n            <h2 className=\"text-3xl font-bold\">{name}</h2>\n            <div className=\"flex text-lg flex-col lg:flex-row xl:flex-row\">\n              <ul className=\"flex-1 py-4 mr-8\">\n                <InformationItem label=\"Native name\">\n                  {nativeName}\n                </InformationItem>\n                <InformationItem label=\"Population\">\n                  {population}\n                </InformationItem>\n                <InformationItem label=\"Region\">{region}</InformationItem>\n                <InformationItem label=\"Sub Region\">\n                  {subregion}\n                </InformationItem>\n                <InformationItem label=\"Capital\">{capital}</InformationItem>\n              </ul>\n              <ul className=\"flex-1 py-8\">\n                <InformationItem label=\"Top Level Domain\">\n                  {topLevelDomain.toString()}\n                </InformationItem>\n                <InformationItem label=\"Currencies\">\n                  {currencies.toString()}\n                </InformationItem>\n                <InformationItem label=\"Languages\">\n                  {languages.toString()}\n                </InformationItem>\n              </ul>\n            </div>\n          </section>\n          <section className=\"flex flex-col xl:ml-24 py-1 xl:items-start xl:flex-row max-w-2xl\">\n            <span className=\"flex-shrink-0 font-semibold mr-4 mb-4 mt-1 xl:mb-0\">\n              Border Countries:\n            </span>\n            <ul className=\"flex flex-wrap\">\n              {borders &&\n                borders.map(item => (\n                  <li key={item.alpha3Code}>\n                    <button\n                      type=\"button\"\n                      title={item.alpha3Code}\n                      onClick={() => history.push(`/${item.alpha3Code}`)}\n                      className=\"bg-white shadow-md rounded-md flex mr-1 py-1 px-4 items-center justify-center mb-4 dark:bg-common-blue font-semibold hover:border hover:border-dark-hover dark:hover:shadow-xl hover:scale-50\"\n                    >\n                      {item.name}\n                    </button>\n                  </li>\n                ))}\n            </ul>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CountryDetails;\n"],"sourceRoot":""}