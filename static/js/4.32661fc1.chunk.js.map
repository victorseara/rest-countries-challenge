{"version":3,"sources":["api/countries/countriesApi.ts","../node_modules/react-feather/dist/icons/chevron-left.js","pages/CountryDetails/CountryDetails.tsx"],"names":["COUNTRIES_API_URL","client","axios","create","baseURL","getAllCountries","a","params","fields","get","then","response","data","catch","Error","findCountryByName","countryCode","error","isAxiosError","status","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ChevronLeft","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","propTypes","PropTypes","string","oneOfType","number","displayName","InformationItem","label","children","className","CountryDetails","history","location","useState","country","setCountry","useEffect","fetch","countryName","pathname","replace","Loader","message","flag","name","nativeName","population","region","subregion","capital","topLevelDomain","currencies","map","item","languages","type","onClick","goBack","src","alt","toString"],"mappings":"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","file":"static/js/4.32661fc1.chunk.js","sourcesContent":["import axios from 'axios';\nimport { Country } from './types/Country';\n\nexport const COUNTRIES_API_URL = 'https://restcountries.eu/rest/v2';\n\nconst client = axios.create({ baseURL: COUNTRIES_API_URL });\n\nexport const getAllCountries = async () => {\n  const params = { fields: 'flag;name;population;region;capital;alpha3Code' };\n  return client\n    .get<Country[]>(`${COUNTRIES_API_URL}/all`, {\n      params,\n    })\n    .then(response => response.data)\n    .catch(() => {\n      throw new Error(\n        `Sorry, we cannot fetch countries at this moment. Please try again later.`\n      );\n    });\n};\n\nexport const findCountryByName = async (countryCode: string) => {\n  return client\n    .get<Country>(`${COUNTRIES_API_URL}/alpha/${countryCode}`)\n    .then(response => response.data)\n    .catch(error => {\n      if (error.isAxiosError && error.status === 404) {\n        throw new Error(`Sorry, there is no country with name: ${countryCode}`);\n      }\n\n      throw new Error(\n        'Sorry, we failed to respond to your request. Please try again later'\n      );\n    });\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ChevronLeft = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"15 18 9 12 15 6\"\n  }));\n});\nChevronLeft.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nChevronLeft.displayName = 'ChevronLeft';\nexport default ChevronLeft;","import { findCountryByName } from 'api/countries/countriesApi';\nimport { Country } from 'api/countries/types/Country';\nimport { useEffect, useState } from 'react';\nimport { ChevronLeft } from 'react-feather';\nimport { StaticContext } from 'react-router';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Img from 'react-cool-img';\nimport { Loader } from 'components/Loader/Loader';\n\ninterface InformationItemProps {\n  label: string;\n  children: React.ReactNode;\n}\nconst InformationItem = ({ label, children }: InformationItemProps) => (\n  <li className=\"py-1\">\n    <span className=\"font-semibold\">{label}: </span>\n    {children}\n  </li>\n);\n\ninterface Params {\n  name: string;\n}\n\nconst CountryDetails = ({\n  history,\n  location,\n}: RouteComponentProps<Params, StaticContext, Country>) => {\n  const [country, setCountry] = useState<Country>();\n\n  useEffect(() => {\n    const fetch = async (countryName: string) =>\n      findCountryByName(countryName).then(data => setCountry(data));\n    if (location.pathname) {\n      fetch(location.pathname.replace('/', ''));\n    }\n  }, [location.pathname]);\n\n  if (!country) {\n    return <Loader message=\"Loading informations...\" />;\n  }\n\n  const {\n    flag,\n    name,\n    nativeName,\n    population,\n    region,\n    subregion,\n    capital,\n    topLevelDomain,\n  } = country;\n\n  const currencies = country.currencies.map(item => item.name);\n  const languages = country.languages.map(item => item.name);\n\n  return (\n    <div className=\"h-full w-full flex flex-col transition-all duration-1000 ease-linear\">\n      <div className=\"py-12 my-4\">\n        <button\n          className=\"bg-light-gray dark:bg-common-blue px-8 py-4 flex text-lg items-center font-semibold shadow-md rounded-md hover:border hover:border-dark-hover dark:hover:shadow-xl hover:scale-50\"\n          type=\"button\"\n          onClick={() => history.goBack()}\n        >\n          <ChevronLeft />\n          Countries\n        </button>\n      </div>\n      <div className=\"flex flex-col xl:flex-row\">\n        <div className=\"rounded-md max-w-2xl\">\n          <Img\n            src={flag}\n            alt={`Flag of ${name}`}\n            className=\"h-auto w-full shadow-xl rounded-md object-contain\"\n          />\n        </div>\n        <section className=\"flex flex-col flex-1 xl:ml-24 py-12\">\n          <h2 className=\"text-3xl font-bold\">{name}</h2>\n          <div className=\"flex text-lg flex-col lg:flex-row xl:flex-row\">\n            <ul className=\"flex-1 py-4 mr-8\">\n              <InformationItem label=\"Native name\">\n                {nativeName}\n              </InformationItem>\n              <InformationItem label=\"Population\">{population}</InformationItem>\n              <InformationItem label=\"Region\">{region}</InformationItem>\n              <InformationItem label=\"Sub Region\">{subregion}</InformationItem>\n              <InformationItem label=\"Capital\">{capital}</InformationItem>\n            </ul>\n            <ul className=\"flex-1 py-8\">\n              <InformationItem label=\"Top Level Domain\">\n                {topLevelDomain.toString()}\n              </InformationItem>\n              <InformationItem label=\"Currencies\">\n                {currencies.toString()}\n              </InformationItem>\n              <InformationItem label=\"Languages\">\n                {languages.toString()}\n              </InformationItem>\n            </ul>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default CountryDetails;\n"],"sourceRoot":""}