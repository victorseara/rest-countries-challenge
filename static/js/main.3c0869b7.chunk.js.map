{"version":3,"sources":["components/Card/Card.tsx","components/Dropdown/Dropdown.tsx","components/Header/Header.tsx","components/SearchBox/SearchBox.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","country","className","src","flag","alt","name","population","toLocaleString","region","capital","Dropdown","placeholder","onChange","options","value","htmlFor","disabled","hidden","map","item","Header","title","toggleTheme","type","onClick","fill","SearchBox","useState","localValue","setLocalValue","useEffect","debounce","setTimeout","clearTimeout","aria-label","e","target","countriesMock","regionOptions","App","userTheme","setUserTheme","query","setQuery","filterByRegion","setFilterByRegion","countries","filter","toLowerCase","includes","displayCountries","localStorage","setItem","theme","getItem","document","querySelector","classList","add","fixedContent","getElementById","fixedContentHeight","offsetHeight","mainContent","style","marginTop","updateQuery","useCallback","overflowX","id","remove","minWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3c0869b7.chunk.js","sourcesContent":["export interface CountryGeneralInformation {\n  flag: string;\n  name: string;\n  capital: string;\n  region: string;\n  population: number;\n}\n\ninterface CardProps {\n  country: CountryGeneralInformation;\n}\n\nconst Card = ({ country }: CardProps) => {\n  return (\n    <div className=\"flex flex-col dark:bg-common-blue rounded-md shadow-md dark:text-white text-very-dark-blue\">\n      <img\n        src={country.flag}\n        alt={`Flag of ${country.name}`}\n        className=\"object-cover w-full h-52 rounded-t-md\"\n      />\n      <div className=\"py-8 px-6\">\n        <h3 className=\"font-bold text-lg mb-4\">{country.name}</h3>\n        <ul>\n          <li className=\"mb-2\">\n            <span className=\"font-semibold\">Population: </span>{' '}\n            {country.population.toLocaleString()}\n          </li>\n          <li className=\"mb-2\">\n            <span className=\"font-semibold\">Region: </span> {country.region}\n          </li>\n          <li className=\"mb-2\">\n            <span className=\"font-semibold\">Capital: </span> {country.capital}\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import { ChevronDown } from 'react-feather';\n\ntype Options = string[];\n\ninterface DropdownProps {\n  name?: string;\n  placeholder?: string;\n  value?: string;\n  onChange?: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n  options: Options;\n}\n\nconst Dropdown = ({\n  name,\n  placeholder,\n  onChange,\n  options,\n  value,\n}: DropdownProps) => {\n  return (\n    <label\n      htmlFor=\"Filter by Region\"\n      className=\"relative flex items-center text-gray-500 dark:text-gray-200 h-full rounded-md shadow-md\"\n    >\n      <ChevronDown className=\"absolute my-auto right-0 mx-4\" />\n      <select\n        onChange={onChange}\n        name={name}\n        value={value}\n        className=\"w-full h-full dark:bg-common-blue px-8 bg-white rounded-md font-semibold focus:outline-none focus:ring-inset focus:ring-dark-hover focus:ring-1\"\n      >\n        <option disabled hidden className=\"font-semibold\" value=\"\">\n          {placeholder || 'Select an option'}\n        </option>\n        {options.map(item => (\n          <option key={item} className=\"font-semibold\">\n            {item}\n          </option>\n        ))}\n      </select>\n    </label>\n  );\n};\n\nexport default Dropdown;\n","import { Moon } from 'react-feather';\n\ninterface HeaderProps {\n  title: string;\n  toggleTheme: () => void;\n}\n\nconst Header = ({ title, toggleTheme }: HeaderProps) => {\n  return (\n    <div className=\"w-full bg-white dark:bg-common-blue py-6 shadow-md flex justify-center  text-dark-blue dark:text-white\">\n      <div className=\"w-10/12 max-w-screen-2xl flex justify-between items-center\">\n        <h1 className=\"font-bold text-xl sm:text-3xl\">{title}</h1>\n        <button\n          type=\"button\"\n          className=\"flex cursor-pointer hover:opacity-80\"\n          onClick={toggleTheme}\n        >\n          <Moon fill=\"#fff\" />\n          <span className=\"ml-2 font-semibold hidden sm:inline\">Dark mode</span>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { useEffect, useState } from 'react';\nimport { Search } from 'react-feather';\n\ntype SearchBoxProps = {\n  placeholder?: string;\n  value?: string;\n  onChange: (value: string) => void;\n};\n\nconst SearchBox = ({ placeholder, value, onChange }: SearchBoxProps) => {\n  const [localValue, setLocalValue] = useState(value || '');\n\n  useEffect(() => {\n    const debounce = setTimeout(() => {\n      onChange(localValue);\n    }, 300);\n\n    return () => {\n      clearTimeout(debounce);\n    };\n  }, [localValue, onChange]);\n\n  return (\n    <div className=\"relative w-full h-full flex items-center text-gray-500 dark:text-gray-200\">\n      <Search className=\"absolute my-auto mx-4\" />\n      <input\n        className=\"text-base rounded-md shadow-md w-full h-full py-8 font-semibold input-light input-dark pl-16 focus:outline-none focus:ring-inset focus:ring-dark-hover focus:ring-1\"\n        type=\"text\"\n        aria-label=\"Search\"\n        onChange={e => setLocalValue(e.target.value)}\n        value={localValue}\n        placeholder={placeholder || 'Search ...'}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import { useCallback, useEffect, useState } from 'react';\nimport Card, { CountryGeneralInformation } from './components/Card/Card';\nimport Dropdown from './components/Dropdown/Dropdown';\nimport Header from './components/Header/Header';\nimport SearchBox from './components/SearchBox/SearchBox';\nimport mock from './components/Card/mock.json';\n\nconst countriesMock = mock as CountryGeneralInformation[];\nconst regionOptions = ['Africa', 'Americas', 'Asia', 'Europe', 'Oceania'];\n\ntype UserTheme = 'light' | 'dark';\n\nconst displayCountries = (filterByRegion?: string, query?: string) => {\n  if (!filterByRegion && !query) {\n    return countriesMock;\n  }\n\n  const result = countriesMock.filter(item => {\n    if (filterByRegion && item.region === filterByRegion) {\n      if (!query) {\n        return true;\n      }\n      return item.name.toLowerCase().includes(query.toLowerCase());\n    }\n\n    if (query && !filterByRegion) {\n      return item.name.toLowerCase().includes(query.toLowerCase());\n    }\n\n    return false;\n  });\n\n  return result;\n};\n\nfunction App() {\n  const [userTheme, setUserTheme] = useState<UserTheme>('light');\n  const [query, setQuery] = useState('');\n  const [filterByRegion, setFilterByRegion] = useState('');\n\n  const countries =\n    filterByRegion || query\n      ? displayCountries(filterByRegion, query)\n      : countriesMock;\n\n  localStorage.setItem('theme', 'dark');\n\n  useEffect(() => {\n    const theme = localStorage.getItem('theme') as UserTheme;\n\n    if (!theme) {\n      localStorage.setItem('theme', 'light');\n    }\n\n    if (theme === 'dark') {\n      setUserTheme('dark');\n      document.querySelector('html')?.classList.add('dark');\n    }\n  }, []);\n\n  const toggleTheme = () => {\n    if (userTheme === 'dark') {\n      setUserTheme('light');\n      document.querySelector('html')?.classList.remove('dark');\n      localStorage.setItem('theme', 'light');\n    } else {\n      setUserTheme('dark');\n      document.querySelector('html')?.classList.add('dark');\n      localStorage.setItem('theme', 'dark');\n    }\n  };\n\n  useEffect(() => {\n    const fixedContent = document.getElementById('fixed-content');\n    const fixedContentHeight = (fixedContent && fixedContent.offsetHeight) || 0;\n\n    const mainContent = document.getElementById('main-content');\n    if (mainContent) {\n      mainContent.style.marginTop = `${fixedContentHeight}px`;\n    }\n  }, []);\n\n  const updateQuery = useCallback((value: string) => setQuery(value), []);\n\n  return (\n    <div\n      className=\"h-full flex flex-col items-center\"\n      style={{ overflowX: 'clip' }}\n    >\n      <div\n        className=\"w-full flex flex-col fixed dark:bg-dark-blue bg-light-gray\"\n        id=\"fixed-content\"\n      >\n        <Header title=\"Where in the world ?\" toggleTheme={toggleTheme} />\n        <div className=\"h-full w-10/12 max-w-screen-2xl flex flex-col my-20 self-center\">\n          <div className=\"flex flex-col sm:justify-between sm:flex-row h-16\">\n            <div className=\"w-12/12 sm:w-1/3\" style={{ minWidth: '320px' }}>\n              <SearchBox\n                placeholder=\"Search for a country...\"\n                value={query}\n                onChange={updateQuery}\n              />\n            </div>\n            <div\n              className=\"mt-12 w-9/12 sm:mt-0 sm:w-2/12\"\n              style={{ minWidth: '200px' }}\n            >\n              <Dropdown\n                options={regionOptions}\n                placeholder=\"Filter by Region\"\n                value={filterByRegion}\n                onChange={e => setFilterByRegion(e.target.value)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"h-full w-10/12 max-w-screen-2xl flex flex-col\">\n        <main\n          id=\"main-content\"\n          className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 w-full gap-20 grid-rows-1\"\n        >\n          {countries.map(country => (\n            <Card country={country} key={country.name} />\n          ))}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}